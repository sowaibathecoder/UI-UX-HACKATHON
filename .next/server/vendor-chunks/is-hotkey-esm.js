"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/is-hotkey-esm";
exports.ids = ["vendor-chunks/is-hotkey-esm"];
exports.modules = {

/***/ "(ssr)/./node_modules/is-hotkey-esm/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/is-hotkey-esm/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareHotkey: () => (/* binding */ compareHotkey),\n/* harmony export */   isCodeHotkey: () => (/* binding */ isCodeHotkey),\n/* harmony export */   isHotkey: () => (/* binding */ isHotkey),\n/* harmony export */   isKeyHotkey: () => (/* binding */ isKeyHotkey),\n/* harmony export */   parseHotkey: () => (/* binding */ parseHotkey),\n/* harmony export */   toKeyCode: () => (/* binding */ toKeyCode),\n/* harmony export */   toKeyName: () => (/* binding */ toKeyName)\n/* harmony export */ });\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  control: \"ctrlKey\",\n  meta: \"metaKey\",\n  shift: \"shiftKey\"\n}, ALIASES = {\n  add: \"+\",\n  break: \"pause\",\n  cmd: \"meta\",\n  command: \"meta\",\n  ctl: \"control\",\n  ctrl: \"control\",\n  del: \"delete\",\n  down: \"arrowdown\",\n  esc: \"escape\",\n  ins: \"insert\",\n  left: \"arrowleft\",\n  mod: IS_MAC ? \"meta\" : \"control\",\n  opt: \"alt\",\n  option: \"alt\",\n  return: \"enter\",\n  right: \"arrowright\",\n  space: \" \",\n  spacebar: \" \",\n  up: \"arrowup\",\n  win: \"meta\",\n  windows: \"meta\"\n}, CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  \" \": 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  \";\": 186,\n  \"=\": 187,\n  \",\": 188,\n  \"-\": 189,\n  \".\": 190,\n  \"/\": 191,\n  \"`\": 192,\n  \"[\": 219,\n  \"\\\\\": 220,\n  \"]\": 221,\n  \"'\": 222\n};\nfor (var f = 1; f < 20; f++)\n  CODES[\"f\" + f] = 111 + f;\nfunction isHotkey(hotkey, options, event) {\n  options && !(\"byKey\" in options) && (event = options, options = null), Array.isArray(hotkey) || (hotkey = [hotkey]);\n  const array = hotkey.map((string) => parseHotkey(string, options)), check = (e) => array.some((object) => compareHotkey(object, e));\n  return event == null ? check : check(event);\n}\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: !0 }, event);\n}\nfunction parseHotkey(hotkey, options) {\n  const byKey = options && options.byKey, ret = {};\n  hotkey = hotkey.replace(\"++\", \"+add\");\n  const values = hotkey.split(\"+\"), { length } = values;\n  for (const k in MODIFIERS)\n    ret[MODIFIERS[k]] = !1;\n  for (let value of values) {\n    const optional = value.endsWith(\"?\") && value.length > 1;\n    optional && (value = value.slice(0, -1));\n    const name = toKeyName(value), modifier = MODIFIERS[name];\n    if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name])\n      throw new TypeError(`Unknown modifier: \"${value}\"`);\n    (length === 1 || !modifier) && (byKey ? ret.key = name : ret.which = toKeyCode(value)), modifier && (ret[modifier] = optional ? null : !0);\n  }\n  return ret;\n}\nfunction compareHotkey(object, event) {\n  for (const key in object) {\n    const expected = object[key];\n    let actual;\n    if (expected != null && (key === \"key\" && event.key != null ? actual = event.key.toLowerCase() : key === \"which\" ? actual = expected === 91 && event.which === 93 ? 91 : event.which : actual = event[key], !(actual == null && expected === !1) && actual !== expected))\n      return !1;\n  }\n  return !0;\n}\nfunction toKeyCode(name) {\n  return name = toKeyName(name), CODES[name] || name.toUpperCase().charCodeAt(0);\n}\nfunction toKeyName(name) {\n  return name = name.toLowerCase(), name = ALIASES[name] || name, name;\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXMtaG90a2V5LWVzbS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixXQUFXO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFNBQVM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsTUFBTTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIkQ6XFxTT1dOX0dJQUlDXFxORVhULVdPUktcXEhBQ0tBVEhPTi0zXFxVSS1VWC1IQUNLQVRIT04tTmV4dEpTLURlc2lnbi1KYW0tMjAyNC0oTVktQ0xPTkUtUFJPSkVDVClcXG5vZGVfbW9kdWxlc1xcaXMtaG90a2V5LWVzbVxcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSVNfTUFDID0gdHlwZW9mIHdpbmRvdyA8IFwidVwiICYmIC9NYWN8aVBvZHxpUGhvbmV8aVBhZC8udGVzdCh3aW5kb3cubmF2aWdhdG9yLnBsYXRmb3JtKSwgTU9ESUZJRVJTID0ge1xuICBhbHQ6IFwiYWx0S2V5XCIsXG4gIGNvbnRyb2w6IFwiY3RybEtleVwiLFxuICBtZXRhOiBcIm1ldGFLZXlcIixcbiAgc2hpZnQ6IFwic2hpZnRLZXlcIlxufSwgQUxJQVNFUyA9IHtcbiAgYWRkOiBcIitcIixcbiAgYnJlYWs6IFwicGF1c2VcIixcbiAgY21kOiBcIm1ldGFcIixcbiAgY29tbWFuZDogXCJtZXRhXCIsXG4gIGN0bDogXCJjb250cm9sXCIsXG4gIGN0cmw6IFwiY29udHJvbFwiLFxuICBkZWw6IFwiZGVsZXRlXCIsXG4gIGRvd246IFwiYXJyb3dkb3duXCIsXG4gIGVzYzogXCJlc2NhcGVcIixcbiAgaW5zOiBcImluc2VydFwiLFxuICBsZWZ0OiBcImFycm93bGVmdFwiLFxuICBtb2Q6IElTX01BQyA/IFwibWV0YVwiIDogXCJjb250cm9sXCIsXG4gIG9wdDogXCJhbHRcIixcbiAgb3B0aW9uOiBcImFsdFwiLFxuICByZXR1cm46IFwiZW50ZXJcIixcbiAgcmlnaHQ6IFwiYXJyb3dyaWdodFwiLFxuICBzcGFjZTogXCIgXCIsXG4gIHNwYWNlYmFyOiBcIiBcIixcbiAgdXA6IFwiYXJyb3d1cFwiLFxuICB3aW46IFwibWV0YVwiLFxuICB3aW5kb3dzOiBcIm1ldGFcIlxufSwgQ09ERVMgPSB7XG4gIGJhY2tzcGFjZTogOCxcbiAgdGFiOiA5LFxuICBlbnRlcjogMTMsXG4gIHNoaWZ0OiAxNixcbiAgY29udHJvbDogMTcsXG4gIGFsdDogMTgsXG4gIHBhdXNlOiAxOSxcbiAgY2Fwc2xvY2s6IDIwLFxuICBlc2NhcGU6IDI3LFxuICBcIiBcIjogMzIsXG4gIHBhZ2V1cDogMzMsXG4gIHBhZ2Vkb3duOiAzNCxcbiAgZW5kOiAzNSxcbiAgaG9tZTogMzYsXG4gIGFycm93bGVmdDogMzcsXG4gIGFycm93dXA6IDM4LFxuICBhcnJvd3JpZ2h0OiAzOSxcbiAgYXJyb3dkb3duOiA0MCxcbiAgaW5zZXJ0OiA0NSxcbiAgZGVsZXRlOiA0NixcbiAgbWV0YTogOTEsXG4gIG51bWxvY2s6IDE0NCxcbiAgc2Nyb2xsbG9jazogMTQ1LFxuICBcIjtcIjogMTg2LFxuICBcIj1cIjogMTg3LFxuICBcIixcIjogMTg4LFxuICBcIi1cIjogMTg5LFxuICBcIi5cIjogMTkwLFxuICBcIi9cIjogMTkxLFxuICBcImBcIjogMTkyLFxuICBcIltcIjogMjE5LFxuICBcIlxcXFxcIjogMjIwLFxuICBcIl1cIjogMjIxLFxuICBcIidcIjogMjIyXG59O1xuZm9yICh2YXIgZiA9IDE7IGYgPCAyMDsgZisrKVxuICBDT0RFU1tcImZcIiArIGZdID0gMTExICsgZjtcbmZ1bmN0aW9uIGlzSG90a2V5KGhvdGtleSwgb3B0aW9ucywgZXZlbnQpIHtcbiAgb3B0aW9ucyAmJiAhKFwiYnlLZXlcIiBpbiBvcHRpb25zKSAmJiAoZXZlbnQgPSBvcHRpb25zLCBvcHRpb25zID0gbnVsbCksIEFycmF5LmlzQXJyYXkoaG90a2V5KSB8fCAoaG90a2V5ID0gW2hvdGtleV0pO1xuICBjb25zdCBhcnJheSA9IGhvdGtleS5tYXAoKHN0cmluZykgPT4gcGFyc2VIb3RrZXkoc3RyaW5nLCBvcHRpb25zKSksIGNoZWNrID0gKGUpID0+IGFycmF5LnNvbWUoKG9iamVjdCkgPT4gY29tcGFyZUhvdGtleShvYmplY3QsIGUpKTtcbiAgcmV0dXJuIGV2ZW50ID09IG51bGwgPyBjaGVjayA6IGNoZWNrKGV2ZW50KTtcbn1cbmZ1bmN0aW9uIGlzQ29kZUhvdGtleShob3RrZXksIGV2ZW50KSB7XG4gIHJldHVybiBpc0hvdGtleShob3RrZXksIGV2ZW50KTtcbn1cbmZ1bmN0aW9uIGlzS2V5SG90a2V5KGhvdGtleSwgZXZlbnQpIHtcbiAgcmV0dXJuIGlzSG90a2V5KGhvdGtleSwgeyBieUtleTogITAgfSwgZXZlbnQpO1xufVxuZnVuY3Rpb24gcGFyc2VIb3RrZXkoaG90a2V5LCBvcHRpb25zKSB7XG4gIGNvbnN0IGJ5S2V5ID0gb3B0aW9ucyAmJiBvcHRpb25zLmJ5S2V5LCByZXQgPSB7fTtcbiAgaG90a2V5ID0gaG90a2V5LnJlcGxhY2UoXCIrK1wiLCBcIithZGRcIik7XG4gIGNvbnN0IHZhbHVlcyA9IGhvdGtleS5zcGxpdChcIitcIiksIHsgbGVuZ3RoIH0gPSB2YWx1ZXM7XG4gIGZvciAoY29uc3QgayBpbiBNT0RJRklFUlMpXG4gICAgcmV0W01PRElGSUVSU1trXV0gPSAhMTtcbiAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgY29uc3Qgb3B0aW9uYWwgPSB2YWx1ZS5lbmRzV2l0aChcIj9cIikgJiYgdmFsdWUubGVuZ3RoID4gMTtcbiAgICBvcHRpb25hbCAmJiAodmFsdWUgPSB2YWx1ZS5zbGljZSgwLCAtMSkpO1xuICAgIGNvbnN0IG5hbWUgPSB0b0tleU5hbWUodmFsdWUpLCBtb2RpZmllciA9IE1PRElGSUVSU1tuYW1lXTtcbiAgICBpZiAodmFsdWUubGVuZ3RoID4gMSAmJiAhbW9kaWZpZXIgJiYgIUFMSUFTRVNbdmFsdWVdICYmICFDT0RFU1tuYW1lXSlcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFVua25vd24gbW9kaWZpZXI6IFwiJHt2YWx1ZX1cImApO1xuICAgIChsZW5ndGggPT09IDEgfHwgIW1vZGlmaWVyKSAmJiAoYnlLZXkgPyByZXQua2V5ID0gbmFtZSA6IHJldC53aGljaCA9IHRvS2V5Q29kZSh2YWx1ZSkpLCBtb2RpZmllciAmJiAocmV0W21vZGlmaWVyXSA9IG9wdGlvbmFsID8gbnVsbCA6ICEwKTtcbiAgfVxuICByZXR1cm4gcmV0O1xufVxuZnVuY3Rpb24gY29tcGFyZUhvdGtleShvYmplY3QsIGV2ZW50KSB7XG4gIGZvciAoY29uc3Qga2V5IGluIG9iamVjdCkge1xuICAgIGNvbnN0IGV4cGVjdGVkID0gb2JqZWN0W2tleV07XG4gICAgbGV0IGFjdHVhbDtcbiAgICBpZiAoZXhwZWN0ZWQgIT0gbnVsbCAmJiAoa2V5ID09PSBcImtleVwiICYmIGV2ZW50LmtleSAhPSBudWxsID8gYWN0dWFsID0gZXZlbnQua2V5LnRvTG93ZXJDYXNlKCkgOiBrZXkgPT09IFwid2hpY2hcIiA/IGFjdHVhbCA9IGV4cGVjdGVkID09PSA5MSAmJiBldmVudC53aGljaCA9PT0gOTMgPyA5MSA6IGV2ZW50LndoaWNoIDogYWN0dWFsID0gZXZlbnRba2V5XSwgIShhY3R1YWwgPT0gbnVsbCAmJiBleHBlY3RlZCA9PT0gITEpICYmIGFjdHVhbCAhPT0gZXhwZWN0ZWQpKVxuICAgICAgcmV0dXJuICExO1xuICB9XG4gIHJldHVybiAhMDtcbn1cbmZ1bmN0aW9uIHRvS2V5Q29kZShuYW1lKSB7XG4gIHJldHVybiBuYW1lID0gdG9LZXlOYW1lKG5hbWUpLCBDT0RFU1tuYW1lXSB8fCBuYW1lLnRvVXBwZXJDYXNlKCkuY2hhckNvZGVBdCgwKTtcbn1cbmZ1bmN0aW9uIHRvS2V5TmFtZShuYW1lKSB7XG4gIHJldHVybiBuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpLCBuYW1lID0gQUxJQVNFU1tuYW1lXSB8fCBuYW1lLCBuYW1lO1xufVxuZXhwb3J0IHtcbiAgY29tcGFyZUhvdGtleSxcbiAgaXNDb2RlSG90a2V5LFxuICBpc0hvdGtleSxcbiAgaXNLZXlIb3RrZXksXG4gIHBhcnNlSG90a2V5LFxuICB0b0tleUNvZGUsXG4gIHRvS2V5TmFtZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/is-hotkey-esm/dist/index.js\n");

/***/ })

};
;