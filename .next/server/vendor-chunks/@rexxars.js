"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@rexxars";
exports.ids = ["vendor-chunks/@rexxars"];
exports.modules = {

/***/ "(ssr)/./node_modules/@rexxars/react-json-inspector/dist/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@rexxars/react-json-inspector/dist/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonInspector: () => (/* binding */ JsonInspector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debounce */ \"(ssr)/./node_modules/debounce/index.js\");\n/* harmony import */ var md5_o_matic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! md5-o-matic */ \"(ssr)/./node_modules/md5-o-matic/lib/md5omatic.js\");\n\n\n\n\nlet id = Math.ceil(Math.random() * 10);\nconst uid = () => ++id;\nfunction type(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\nfunction isPrimitive(value) {\n  const t = type(value);\n  return t !== \"Object\" && t !== \"Array\";\n}\nclass Highlighter extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  shouldComponentUpdate(p) {\n    return p.highlight !== this.props.highlight;\n  }\n  render() {\n    const str = this.props.string || \"\", highlight = this.props.highlight || \"\", highlightStart = str.search(highlight);\n    if (!highlight || highlightStart === -1)\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: str });\n    const highlightLength = highlight.source.length, highlightString = str.slice(\n      highlightStart,\n      highlightStart + highlightLength\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: str.split(highlight).map(function(part, index) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { children: [\n        index > 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"json-inspector__hl\", children: highlightString }) : null,\n        part\n      ] }, index);\n    }) });\n  }\n}\nfunction isObject(value) {\n  return typeof value == \"object\" && value !== null && !Array.isArray(value);\n}\nconst PATH_PREFIX = \".root.\";\nclass Leaf extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  constructor(props) {\n    super(props), this.state = {\n      expanded: this._isInitiallyExpanded(this.props)\n    };\n  }\n  render() {\n    const { label, data, root, id: inputId } = this.props, id2 = \"id_\" + uid(), d = {\n      path: this.keypath(),\n      key: label.toString(),\n      value: data\n    }, onLabelClick = this._onClick.bind(this, d);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"div\",\n      {\n        \"data-testid\": root ? \"leaf-root\" : \"leaf-child\",\n        \"aria-expanded\": this.state.expanded,\n        \"data-root\": root || void 0,\n        className: this.getClassName(),\n        id: \"leaf-\" + this._rootPath(),\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            \"input\",\n            {\n              className: \"json-inspector__radio\",\n              type: \"radio\",\n              name: id2,\n              id: inputId,\n              tabIndex: -1\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n            \"label\",\n            {\n              className: \"json-inspector__line\",\n              htmlFor: id2,\n              onClick: onLabelClick,\n              children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"json-inspector__flatpath\", children: d.path }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { className: \"json-inspector__key\", children: [\n                  this.format(d.key),\n                  \":\",\n                  this.renderInteractiveLabel(d.key, !0)\n                ] }),\n                this.renderTitle(),\n                this.renderShowOriginalButton()\n              ]\n            }\n          ),\n          this.renderChildren()\n        ]\n      }\n    );\n  }\n  renderTitle() {\n    const data = this.data(), t = type(data);\n    if (Array.isArray(data)) {\n      const length = data.length;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { className: \"json-inspector__value json-inspector__value_helper\", children: [\n        length > 0 ? \"[\\u2026] \" : \"[] \",\n        items(length)\n      ] });\n    }\n    if (typeof data == \"object\" && data !== null) {\n      const keys = Object.keys(data).length;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { className: \"json-inspector__value json-inspector__value_helper\", children: [\n        keys > 0 ? \"{\\u2026} \" : \"{} \",\n        properties(keys)\n      ] });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"span\",\n      {\n        className: \"json-inspector__value json-inspector__value_\" + t.toLowerCase(),\n        children: [\n          this.format(String(data)),\n          this.renderInteractiveLabel(data, !1)\n        ]\n      }\n    );\n  }\n  renderChildren() {\n    const {\n      verboseShowOriginal,\n      query,\n      id: id2,\n      isExpanded,\n      interactiveLabel,\n      onClick,\n      getOriginal\n    } = this.props, childPrefix = this._rootPath(), data = this.data();\n    return this.state.expanded && (isObject(data) || Array.isArray(data)) ? Object.keys(data).map((key) => {\n      const value = data[key], shouldGetOriginal = !this.state.original || (verboseShowOriginal ? query : !1);\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Leaf,\n        {\n          data: value,\n          label: key,\n          prefix: childPrefix,\n          onClick,\n          id: id2,\n          query,\n          getOriginal: shouldGetOriginal ? getOriginal : void 0,\n          isExpanded,\n          interactiveLabel,\n          verboseShowOriginal\n        },\n        getLeafKey(key, value)\n      );\n    }) : null;\n  }\n  renderShowOriginalButton() {\n    const { data, getOriginal, query } = this.props;\n    return isPrimitive(data) || this.state.original || !getOriginal || !query || query.test(this.keypath()) ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"span\",\n      {\n        className: \"json-inspector__show-original\",\n        onClick: this._onShowOriginalClick\n      }\n    );\n  }\n  renderInteractiveLabel(originalValue, isKey) {\n    const InteractiveLabel = this.props.interactiveLabel;\n    return typeof InteractiveLabel == \"function\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      InteractiveLabel,\n      {\n        value: String(originalValue),\n        originalValue,\n        isKey,\n        keypath: this.keypath()\n      }\n    ) : null;\n  }\n  static getDerivedStateFromProps(props, state) {\n    return props.query ? {\n      expanded: !props.query.test(props.label)\n    } : null;\n  }\n  componentDidUpdate(prevProps) {\n    prevProps.query && !this.props.query && this.setState({\n      expanded: this._isInitiallyExpanded(this.props)\n    });\n  }\n  _rootPath() {\n    return (this.props.prefix || \"\") + \".\" + this.props.label;\n  }\n  keypath() {\n    return this._rootPath().slice(PATH_PREFIX.length);\n  }\n  data() {\n    return this.state.original || this.props.data;\n  }\n  format(str) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Highlighter, { string: str, highlight: this.props.query });\n  }\n  getClassName() {\n    let cn = \"json-inspector__leaf\";\n    return this.props.root && (cn += \" json-inspector__leaf_root\"), this.state.expanded && (cn += \" json-inspector__leaf_expanded\"), isPrimitive(this.props.data) || (cn += \" json-inspector__leaf_composite\"), cn;\n  }\n  toggle() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n  _onClick(data, e) {\n    this.toggle(), this.props.onClick && this.props.onClick(data), e.stopPropagation();\n  }\n  _onShowOriginalClick = (e) => {\n    this.setState({\n      original: this.props.getOriginal?.(this.keypath())\n    }), e.stopPropagation();\n  };\n  _isInitiallyExpanded(p) {\n    if (p.root)\n      return !0;\n    const keypath = this.keypath();\n    return p.query ? !p.query.test(keypath) && typeof p.getOriginal == \"function\" : p.isExpanded ? p.isExpanded(keypath, p.data) : !1;\n  }\n}\nfunction items(count) {\n  return count + (count === 1 ? \" item\" : \" items\");\n}\nfunction properties(count) {\n  return count + (count === 1 ? \" property\" : \" properties\");\n}\nfunction getLeafKey(key, value) {\n  if (isPrimitive(value)) {\n    const hash = md5_o_matic__WEBPACK_IMPORTED_MODULE_3__(String(value));\n    return key + \":\" + hash;\n  } else\n    return key + \"[\" + type(value) + \"]\";\n}\nconst noop = (...args) => {\n}, SearchBar = ({ onChange = noop }) => {\n  const onSearchChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (evt) => onChange(evt.target.value),\n    [onChange]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"input\",\n    {\n      className: \"json-inspector__search\",\n      type: \"search\",\n      placeholder: \"Search\",\n      onChange: onSearchChange\n    }\n  );\n};\nfunction isEmpty(object) {\n  return isObject(object) ? Object.keys(object).length === 0 : Array.isArray(object) ? object.length === 0 : object === null || typeof object != \"string\" || typeof object != \"number\" ? !0 : Object.keys(object).length === 0;\n}\nconst getFilterer = memoize(\n  (data, opts) => {\n    const options = opts || { cacheResults: !0 }, cache = {};\n    return function(query) {\n      if (!options.cacheResults)\n        return find(data, query, options);\n      let subquery;\n      if (!cache[query]) {\n        for (var i = query.length - 1; i > 0; i -= 1)\n          if (subquery = query.slice(0, i), cache[subquery]) {\n            cache[query] = find(cache[subquery], query, options);\n            break;\n          }\n      }\n      return cache[query] || (cache[query] = find(data, query, options)), cache[query];\n    };\n  }\n);\nfunction find(data, query, options) {\n  return !isObject(data) && !Array.isArray(data) ? {} : Object.keys(data).reduce(function(acc, key) {\n    const value = data[key];\n    let matches;\n    return value ? typeof value != \"object\" ? ((contains(query, key, options) || contains(query, value, options)) && (acc[key] = value), acc) : contains(query, key, options) ? (acc[key] = value, acc) : (matches = find(value, query, options), isEmpty(matches) || Object.assign(acc, pair(key, matches)), acc) : acc;\n  }, {});\n}\nfunction contains(query, value, options) {\n  if (!value)\n    return !1;\n  var haystack = String(value), needle = query;\n  return options?.ignoreCase && (haystack = haystack.toLowerCase(), needle = needle.toLowerCase()), haystack.indexOf(needle) !== -1;\n}\nfunction pair(key, value) {\n  return { [key]: value };\n}\nfunction memoize(fn) {\n  let lastData, lastOptions, lastResult;\n  return (data, options) => ((!lastResult || data !== lastData || options !== lastOptions) && (lastData = data, lastOptions = options, lastResult = fn(data, options)), lastResult);\n}\nconst PATH_DELIMITER = \".\";\nfunction integer(str) {\n  return parseInt(str, 10);\n}\nfunction lens(data, path) {\n  var p = path.split(PATH_DELIMITER), segment = p.shift();\n  if (!segment)\n    return data;\n  if (Array.isArray(data) && data[integer(segment)])\n    return lens(data[integer(segment)], p.join(PATH_DELIMITER));\n  if (isObject(data) && segment in data)\n    return lens(data[segment], p.join(PATH_DELIMITER));\n}\nconst defaultValidateQuery = (query) => query.length >= 2, defaultFilterOptions = { cacheResults: !0, ignoreCase: !1 };\nclass JsonInspector extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  static defaultProps = {\n    data: null,\n    search: SearchBar,\n    searchOptions: {\n      debounceTime: 0\n    },\n    className: \"\",\n    id: \"json-\" + Date.now(),\n    onClick: noop,\n    filterOptions: {\n      cacheResults: !0,\n      ignoreCase: !1\n    },\n    validateQuery: function(query) {\n      return query.length >= 2;\n    },\n    /**\n     * Decide whether the leaf node at given `keypath` should be expanded initially.\n     *\n     * @param keypath - Path to the node\n     * @param value - Value of the node\n     * @returns True if node should be expanded, false otherwise\n     */\n    isExpanded: function(keypath, value) {\n      return !1;\n    },\n    verboseShowOriginal: !1\n  };\n  constructor(props) {\n    super(props), this.state = {\n      query: \"\",\n      filterer: getFilterer(props.data, props.filterOptions)\n    };\n  }\n  render() {\n    const {\n      data: rawData,\n      className,\n      onClick,\n      id: id2,\n      isExpanded,\n      interactiveLabel,\n      verboseShowOriginal,\n      filterOptions = defaultFilterOptions,\n      validateQuery = defaultValidateQuery\n    } = this.props, isQueryValid = this.state.query !== \"\" && validateQuery(this.state.query), data = isQueryValid ? this.state.filterer(this.state.query) : rawData, isNotFound = isQueryValid && isEmpty(data);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"div\",\n      {\n        \"data-testid\": \"json-inspector\",\n        className: \"json-inspector \" + className,\n        children: [\n          this.renderToolbar(),\n          isNotFound ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"json-inspector__not-found\", children: \"Nothing found\" }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Leaf,\n            {\n              data,\n              onClick,\n              id: id2,\n              getOriginal: this.getOriginal,\n              query: isQueryValid ? new RegExp(\n                this.state.query,\n                filterOptions.ignoreCase ? \"i\" : \"\"\n              ) : null,\n              label: \"root\",\n              root: !0,\n              isExpanded,\n              interactiveLabel,\n              verboseShowOriginal\n            }\n          )\n        ]\n      }\n    );\n  }\n  renderToolbar() {\n    const Search = this.props.search;\n    return Search ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"json-inspector__toolbar\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Search,\n      {\n        onChange: debounce__WEBPACK_IMPORTED_MODULE_2__(\n          this.search,\n          this.props.searchOptions?.debounceTime\n        ),\n        data: this.props.data,\n        query: this.state.query\n      }\n    ) }) : null;\n  }\n  search = (query) => {\n    this.setState({ query });\n  };\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const filterer = getFilterer(nextProps.data, nextProps.filterOptions);\n    return filterer === prevState.filterer ? null : { ...prevState, filterer };\n  }\n  shouldComponentUpdate(nextProps, prevState) {\n    return prevState.query !== this.state.query || nextProps.data !== this.props.data || nextProps.onClick !== this.props.onClick;\n  }\n  createFilterer = (data, options) => {\n    this.setState({\n      filterer: getFilterer(data, options)\n    });\n  };\n  getOriginal = (path) => lens(this.props.data, path);\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJleHhhcnMvcmVhY3QtanNvbi1pbnNwZWN0b3IvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QztBQUNDO0FBQ2Y7QUFDSTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNENBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHNEQUFHLFdBQVcsZUFBZTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixzREFBRyxXQUFXO0FBQ3pDLDZCQUE2Qix1REFBSSxXQUFXO0FBQzVDLG9DQUFvQyxzREFBRyxXQUFXLDREQUE0RDtBQUM5RztBQUNBLFNBQVM7QUFDVCxLQUFLLEdBQUc7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNENBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpQ0FBaUM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDJCQUEyQix1REFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHNEQUFHO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix1REFBSTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msc0RBQUcsVUFBVSx5REFBeUQ7QUFDdEcsZ0NBQWdDLHVEQUFJLFdBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsdURBQUksV0FBVztBQUM1QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix1REFBSSxXQUFXO0FBQzVDLHFCQUFxQixRQUFRLFFBQVE7QUFDckM7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwyQkFBMkIsdURBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLDZCQUE2QixzREFBRztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkMscUlBQXFJLHNEQUFHO0FBQ3hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxzREFBRztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixzREFBRyxnQkFBZ0IsMENBQTBDO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0NBQVM7QUFDMUI7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxpQkFBaUIsaUJBQWlCO0FBQ25DLHlCQUF5QixrREFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0RBQUc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQkFBa0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxPQUFPO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GO0FBQ3BGLDRCQUE0Qiw0Q0FBUztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiwyQkFBMkIsdURBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHNEQUFHLFVBQVUsbUVBQW1FLG9CQUFvQixzREFBRztBQUM5STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHNEQUFHLFVBQVUsZ0VBQWdFLHNEQUFHO0FBQ3BIO0FBQ0E7QUFDQSxrQkFBa0IscUNBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiRDpcXFNPV05fR0lBSUNcXE5FWFQtV09SS1xcSEFDS0FUSE9OLTNcXFVJLVVYLUhBQ0tBVEhPTi1OZXh0SlMtRGVzaWduLUphbS0yMDI0LShNWS1DTE9ORS1QUk9KRUNUKVxcbm9kZV9tb2R1bGVzXFxAcmV4eGFyc1xccmVhY3QtanNvbi1pbnNwZWN0b3JcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGRlYm91bmNlIGZyb20gXCJkZWJvdW5jZVwiO1xuaW1wb3J0IG1kNU9NYXRpYyBmcm9tIFwibWQ1LW8tbWF0aWNcIjtcbmxldCBpZCA9IE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTApO1xuY29uc3QgdWlkID0gKCkgPT4gKytpZDtcbmZ1bmN0aW9uIHR5cGUodmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkuc2xpY2UoOCwgLTEpO1xufVxuZnVuY3Rpb24gaXNQcmltaXRpdmUodmFsdWUpIHtcbiAgY29uc3QgdCA9IHR5cGUodmFsdWUpO1xuICByZXR1cm4gdCAhPT0gXCJPYmplY3RcIiAmJiB0ICE9PSBcIkFycmF5XCI7XG59XG5jbGFzcyBIaWdobGlnaHRlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZShwKSB7XG4gICAgcmV0dXJuIHAuaGlnaGxpZ2h0ICE9PSB0aGlzLnByb3BzLmhpZ2hsaWdodDtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qgc3RyID0gdGhpcy5wcm9wcy5zdHJpbmcgfHwgXCJcIiwgaGlnaGxpZ2h0ID0gdGhpcy5wcm9wcy5oaWdobGlnaHQgfHwgXCJcIiwgaGlnaGxpZ2h0U3RhcnQgPSBzdHIuc2VhcmNoKGhpZ2hsaWdodCk7XG4gICAgaWYgKCFoaWdobGlnaHQgfHwgaGlnaGxpZ2h0U3RhcnQgPT09IC0xKVxuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goXCJzcGFuXCIsIHsgY2hpbGRyZW46IHN0ciB9KTtcbiAgICBjb25zdCBoaWdobGlnaHRMZW5ndGggPSBoaWdobGlnaHQuc291cmNlLmxlbmd0aCwgaGlnaGxpZ2h0U3RyaW5nID0gc3RyLnNsaWNlKFxuICAgICAgaGlnaGxpZ2h0U3RhcnQsXG4gICAgICBoaWdobGlnaHRTdGFydCArIGhpZ2hsaWdodExlbmd0aFxuICAgICk7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goXCJzcGFuXCIsIHsgY2hpbGRyZW46IHN0ci5zcGxpdChoaWdobGlnaHQpLm1hcChmdW5jdGlvbihwYXJ0LCBpbmRleCkge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKFwic3BhblwiLCB7IGNoaWxkcmVuOiBbXG4gICAgICAgIGluZGV4ID4gMCA/IC8qIEBfX1BVUkVfXyAqLyBqc3goXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcImpzb24taW5zcGVjdG9yX19obFwiLCBjaGlsZHJlbjogaGlnaGxpZ2h0U3RyaW5nIH0pIDogbnVsbCxcbiAgICAgICAgcGFydFxuICAgICAgXSB9LCBpbmRleCk7XG4gICAgfSkgfSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIiAmJiB2YWx1ZSAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG5jb25zdCBQQVRIX1BSRUZJWCA9IFwiLnJvb3QuXCI7XG5jbGFzcyBMZWFmIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyksIHRoaXMuc3RhdGUgPSB7XG4gICAgICBleHBhbmRlZDogdGhpcy5faXNJbml0aWFsbHlFeHBhbmRlZCh0aGlzLnByb3BzKVxuICAgIH07XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbGFiZWwsIGRhdGEsIHJvb3QsIGlkOiBpbnB1dElkIH0gPSB0aGlzLnByb3BzLCBpZDIgPSBcImlkX1wiICsgdWlkKCksIGQgPSB7XG4gICAgICBwYXRoOiB0aGlzLmtleXBhdGgoKSxcbiAgICAgIGtleTogbGFiZWwudG9TdHJpbmcoKSxcbiAgICAgIHZhbHVlOiBkYXRhXG4gICAgfSwgb25MYWJlbENsaWNrID0gdGhpcy5fb25DbGljay5iaW5kKHRoaXMsIGQpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cyhcbiAgICAgIFwiZGl2XCIsXG4gICAgICB7XG4gICAgICAgIFwiZGF0YS10ZXN0aWRcIjogcm9vdCA/IFwibGVhZi1yb290XCIgOiBcImxlYWYtY2hpbGRcIixcbiAgICAgICAgXCJhcmlhLWV4cGFuZGVkXCI6IHRoaXMuc3RhdGUuZXhwYW5kZWQsXG4gICAgICAgIFwiZGF0YS1yb290XCI6IHJvb3QgfHwgdm9pZCAwLFxuICAgICAgICBjbGFzc05hbWU6IHRoaXMuZ2V0Q2xhc3NOYW1lKCksXG4gICAgICAgIGlkOiBcImxlYWYtXCIgKyB0aGlzLl9yb290UGF0aCgpLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgICAgICAgICBcImlucHV0XCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fcmFkaW9cIixcbiAgICAgICAgICAgICAgdHlwZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgICBuYW1lOiBpZDIsXG4gICAgICAgICAgICAgIGlkOiBpbnB1dElkLFxuICAgICAgICAgICAgICB0YWJJbmRleDogLTFcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApLFxuICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKFxuICAgICAgICAgICAgXCJsYWJlbFwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBjbGFzc05hbWU6IFwianNvbi1pbnNwZWN0b3JfX2xpbmVcIixcbiAgICAgICAgICAgICAgaHRtbEZvcjogaWQyLFxuICAgICAgICAgICAgICBvbkNsaWNrOiBvbkxhYmVsQ2xpY2ssXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fZmxhdHBhdGhcIiwgY2hpbGRyZW46IGQucGF0aCB9KSxcbiAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cyhcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwianNvbi1pbnNwZWN0b3JfX2tleVwiLCBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtYXQoZC5rZXkpLFxuICAgICAgICAgICAgICAgICAgXCI6XCIsXG4gICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckludGVyYWN0aXZlTGFiZWwoZC5rZXksICEwKVxuICAgICAgICAgICAgICAgIF0gfSksXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJUaXRsZSgpLFxuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyU2hvd09yaWdpbmFsQnV0dG9uKClcbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICAgICksXG4gICAgICAgICAgdGhpcy5yZW5kZXJDaGlsZHJlbigpXG4gICAgICAgIF1cbiAgICAgIH1cbiAgICApO1xuICB9XG4gIHJlbmRlclRpdGxlKCkge1xuICAgIGNvbnN0IGRhdGEgPSB0aGlzLmRhdGEoKSwgdCA9IHR5cGUoZGF0YSk7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIGNvbnN0IGxlbmd0aCA9IGRhdGEubGVuZ3RoO1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fdmFsdWUganNvbi1pbnNwZWN0b3JfX3ZhbHVlX2hlbHBlclwiLCBjaGlsZHJlbjogW1xuICAgICAgICBsZW5ndGggPiAwID8gXCJbXFx1MjAyNl0gXCIgOiBcIltdIFwiLFxuICAgICAgICBpdGVtcyhsZW5ndGgpXG4gICAgICBdIH0pO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRhdGEgPT0gXCJvYmplY3RcIiAmJiBkYXRhICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoO1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fdmFsdWUganNvbi1pbnNwZWN0b3JfX3ZhbHVlX2hlbHBlclwiLCBjaGlsZHJlbjogW1xuICAgICAgICBrZXlzID4gMCA/IFwie1xcdTIwMjZ9IFwiIDogXCJ7fSBcIixcbiAgICAgICAgcHJvcGVydGllcyhrZXlzKVxuICAgICAgXSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKFxuICAgICAgXCJzcGFuXCIsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fdmFsdWUganNvbi1pbnNwZWN0b3JfX3ZhbHVlX1wiICsgdC50b0xvd2VyQ2FzZSgpLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHRoaXMuZm9ybWF0KFN0cmluZyhkYXRhKSksXG4gICAgICAgICAgdGhpcy5yZW5kZXJJbnRlcmFjdGl2ZUxhYmVsKGRhdGEsICExKVxuICAgICAgICBdXG4gICAgICB9XG4gICAgKTtcbiAgfVxuICByZW5kZXJDaGlsZHJlbigpIHtcbiAgICBjb25zdCB7XG4gICAgICB2ZXJib3NlU2hvd09yaWdpbmFsLFxuICAgICAgcXVlcnksXG4gICAgICBpZDogaWQyLFxuICAgICAgaXNFeHBhbmRlZCxcbiAgICAgIGludGVyYWN0aXZlTGFiZWwsXG4gICAgICBvbkNsaWNrLFxuICAgICAgZ2V0T3JpZ2luYWxcbiAgICB9ID0gdGhpcy5wcm9wcywgY2hpbGRQcmVmaXggPSB0aGlzLl9yb290UGF0aCgpLCBkYXRhID0gdGhpcy5kYXRhKCk7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuZXhwYW5kZWQgJiYgKGlzT2JqZWN0KGRhdGEpIHx8IEFycmF5LmlzQXJyYXkoZGF0YSkpID8gT2JqZWN0LmtleXMoZGF0YSkubWFwKChrZXkpID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZGF0YVtrZXldLCBzaG91bGRHZXRPcmlnaW5hbCA9ICF0aGlzLnN0YXRlLm9yaWdpbmFsIHx8ICh2ZXJib3NlU2hvd09yaWdpbmFsID8gcXVlcnkgOiAhMSk7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChcbiAgICAgICAgTGVhZixcbiAgICAgICAge1xuICAgICAgICAgIGRhdGE6IHZhbHVlLFxuICAgICAgICAgIGxhYmVsOiBrZXksXG4gICAgICAgICAgcHJlZml4OiBjaGlsZFByZWZpeCxcbiAgICAgICAgICBvbkNsaWNrLFxuICAgICAgICAgIGlkOiBpZDIsXG4gICAgICAgICAgcXVlcnksXG4gICAgICAgICAgZ2V0T3JpZ2luYWw6IHNob3VsZEdldE9yaWdpbmFsID8gZ2V0T3JpZ2luYWwgOiB2b2lkIDAsXG4gICAgICAgICAgaXNFeHBhbmRlZCxcbiAgICAgICAgICBpbnRlcmFjdGl2ZUxhYmVsLFxuICAgICAgICAgIHZlcmJvc2VTaG93T3JpZ2luYWxcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0TGVhZktleShrZXksIHZhbHVlKVxuICAgICAgKTtcbiAgICB9KSA6IG51bGw7XG4gIH1cbiAgcmVuZGVyU2hvd09yaWdpbmFsQnV0dG9uKCkge1xuICAgIGNvbnN0IHsgZGF0YSwgZ2V0T3JpZ2luYWwsIHF1ZXJ5IH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiBpc1ByaW1pdGl2ZShkYXRhKSB8fCB0aGlzLnN0YXRlLm9yaWdpbmFsIHx8ICFnZXRPcmlnaW5hbCB8fCAhcXVlcnkgfHwgcXVlcnkudGVzdCh0aGlzLmtleXBhdGgoKSkgPyBudWxsIDogLyogQF9fUFVSRV9fICovIGpzeChcbiAgICAgIFwic3BhblwiLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6IFwianNvbi1pbnNwZWN0b3JfX3Nob3ctb3JpZ2luYWxcIixcbiAgICAgICAgb25DbGljazogdGhpcy5fb25TaG93T3JpZ2luYWxDbGlja1xuICAgICAgfVxuICAgICk7XG4gIH1cbiAgcmVuZGVySW50ZXJhY3RpdmVMYWJlbChvcmlnaW5hbFZhbHVlLCBpc0tleSkge1xuICAgIGNvbnN0IEludGVyYWN0aXZlTGFiZWwgPSB0aGlzLnByb3BzLmludGVyYWN0aXZlTGFiZWw7XG4gICAgcmV0dXJuIHR5cGVvZiBJbnRlcmFjdGl2ZUxhYmVsID09IFwiZnVuY3Rpb25cIiA/IC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgICBJbnRlcmFjdGl2ZUxhYmVsLFxuICAgICAge1xuICAgICAgICB2YWx1ZTogU3RyaW5nKG9yaWdpbmFsVmFsdWUpLFxuICAgICAgICBvcmlnaW5hbFZhbHVlLFxuICAgICAgICBpc0tleSxcbiAgICAgICAga2V5cGF0aDogdGhpcy5rZXlwYXRoKClcbiAgICAgIH1cbiAgICApIDogbnVsbDtcbiAgfVxuICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgIHJldHVybiBwcm9wcy5xdWVyeSA/IHtcbiAgICAgIGV4cGFuZGVkOiAhcHJvcHMucXVlcnkudGVzdChwcm9wcy5sYWJlbClcbiAgICB9IDogbnVsbDtcbiAgfVxuICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgcHJldlByb3BzLnF1ZXJ5ICYmICF0aGlzLnByb3BzLnF1ZXJ5ICYmIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZXhwYW5kZWQ6IHRoaXMuX2lzSW5pdGlhbGx5RXhwYW5kZWQodGhpcy5wcm9wcylcbiAgICB9KTtcbiAgfVxuICBfcm9vdFBhdGgoKSB7XG4gICAgcmV0dXJuICh0aGlzLnByb3BzLnByZWZpeCB8fCBcIlwiKSArIFwiLlwiICsgdGhpcy5wcm9wcy5sYWJlbDtcbiAgfVxuICBrZXlwYXRoKCkge1xuICAgIHJldHVybiB0aGlzLl9yb290UGF0aCgpLnNsaWNlKFBBVEhfUFJFRklYLmxlbmd0aCk7XG4gIH1cbiAgZGF0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5vcmlnaW5hbCB8fCB0aGlzLnByb3BzLmRhdGE7XG4gIH1cbiAgZm9ybWF0KHN0cikge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KEhpZ2hsaWdodGVyLCB7IHN0cmluZzogc3RyLCBoaWdobGlnaHQ6IHRoaXMucHJvcHMucXVlcnkgfSk7XG4gIH1cbiAgZ2V0Q2xhc3NOYW1lKCkge1xuICAgIGxldCBjbiA9IFwianNvbi1pbnNwZWN0b3JfX2xlYWZcIjtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5yb290ICYmIChjbiArPSBcIiBqc29uLWluc3BlY3Rvcl9fbGVhZl9yb290XCIpLCB0aGlzLnN0YXRlLmV4cGFuZGVkICYmIChjbiArPSBcIiBqc29uLWluc3BlY3Rvcl9fbGVhZl9leHBhbmRlZFwiKSwgaXNQcmltaXRpdmUodGhpcy5wcm9wcy5kYXRhKSB8fCAoY24gKz0gXCIganNvbi1pbnNwZWN0b3JfX2xlYWZfY29tcG9zaXRlXCIpLCBjbjtcbiAgfVxuICB0b2dnbGUoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBleHBhbmRlZDogIXRoaXMuc3RhdGUuZXhwYW5kZWRcbiAgICB9KTtcbiAgfVxuICBfb25DbGljayhkYXRhLCBlKSB7XG4gICAgdGhpcy50b2dnbGUoKSwgdGhpcy5wcm9wcy5vbkNsaWNrICYmIHRoaXMucHJvcHMub25DbGljayhkYXRhKSwgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuICBfb25TaG93T3JpZ2luYWxDbGljayA9IChlKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBvcmlnaW5hbDogdGhpcy5wcm9wcy5nZXRPcmlnaW5hbD8uKHRoaXMua2V5cGF0aCgpKVxuICAgIH0pLCBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9O1xuICBfaXNJbml0aWFsbHlFeHBhbmRlZChwKSB7XG4gICAgaWYgKHAucm9vdClcbiAgICAgIHJldHVybiAhMDtcbiAgICBjb25zdCBrZXlwYXRoID0gdGhpcy5rZXlwYXRoKCk7XG4gICAgcmV0dXJuIHAucXVlcnkgPyAhcC5xdWVyeS50ZXN0KGtleXBhdGgpICYmIHR5cGVvZiBwLmdldE9yaWdpbmFsID09IFwiZnVuY3Rpb25cIiA6IHAuaXNFeHBhbmRlZCA/IHAuaXNFeHBhbmRlZChrZXlwYXRoLCBwLmRhdGEpIDogITE7XG4gIH1cbn1cbmZ1bmN0aW9uIGl0ZW1zKGNvdW50KSB7XG4gIHJldHVybiBjb3VudCArIChjb3VudCA9PT0gMSA/IFwiIGl0ZW1cIiA6IFwiIGl0ZW1zXCIpO1xufVxuZnVuY3Rpb24gcHJvcGVydGllcyhjb3VudCkge1xuICByZXR1cm4gY291bnQgKyAoY291bnQgPT09IDEgPyBcIiBwcm9wZXJ0eVwiIDogXCIgcHJvcGVydGllc1wiKTtcbn1cbmZ1bmN0aW9uIGdldExlYWZLZXkoa2V5LCB2YWx1ZSkge1xuICBpZiAoaXNQcmltaXRpdmUodmFsdWUpKSB7XG4gICAgY29uc3QgaGFzaCA9IG1kNU9NYXRpYyhTdHJpbmcodmFsdWUpKTtcbiAgICByZXR1cm4ga2V5ICsgXCI6XCIgKyBoYXNoO1xuICB9IGVsc2VcbiAgICByZXR1cm4ga2V5ICsgXCJbXCIgKyB0eXBlKHZhbHVlKSArIFwiXVwiO1xufVxuY29uc3Qgbm9vcCA9ICguLi5hcmdzKSA9PiB7XG59LCBTZWFyY2hCYXIgPSAoeyBvbkNoYW5nZSA9IG5vb3AgfSkgPT4ge1xuICBjb25zdCBvblNlYXJjaENoYW5nZSA9IHVzZUNhbGxiYWNrKFxuICAgIChldnQpID0+IG9uQ2hhbmdlKGV2dC50YXJnZXQudmFsdWUpLFxuICAgIFtvbkNoYW5nZV1cbiAgKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgXCJpbnB1dFwiLFxuICAgIHtcbiAgICAgIGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fc2VhcmNoXCIsXG4gICAgICB0eXBlOiBcInNlYXJjaFwiLFxuICAgICAgcGxhY2Vob2xkZXI6IFwiU2VhcmNoXCIsXG4gICAgICBvbkNoYW5nZTogb25TZWFyY2hDaGFuZ2VcbiAgICB9XG4gICk7XG59O1xuZnVuY3Rpb24gaXNFbXB0eShvYmplY3QpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KG9iamVjdCkgPyBPYmplY3Qua2V5cyhvYmplY3QpLmxlbmd0aCA9PT0gMCA6IEFycmF5LmlzQXJyYXkob2JqZWN0KSA/IG9iamVjdC5sZW5ndGggPT09IDAgOiBvYmplY3QgPT09IG51bGwgfHwgdHlwZW9mIG9iamVjdCAhPSBcInN0cmluZ1wiIHx8IHR5cGVvZiBvYmplY3QgIT0gXCJudW1iZXJcIiA/ICEwIDogT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGggPT09IDA7XG59XG5jb25zdCBnZXRGaWx0ZXJlciA9IG1lbW9pemUoXG4gIChkYXRhLCBvcHRzKSA9PiB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdHMgfHwgeyBjYWNoZVJlc3VsdHM6ICEwIH0sIGNhY2hlID0ge307XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgICBpZiAoIW9wdGlvbnMuY2FjaGVSZXN1bHRzKVxuICAgICAgICByZXR1cm4gZmluZChkYXRhLCBxdWVyeSwgb3B0aW9ucyk7XG4gICAgICBsZXQgc3VicXVlcnk7XG4gICAgICBpZiAoIWNhY2hlW3F1ZXJ5XSkge1xuICAgICAgICBmb3IgKHZhciBpID0gcXVlcnkubGVuZ3RoIC0gMTsgaSA+IDA7IGkgLT0gMSlcbiAgICAgICAgICBpZiAoc3VicXVlcnkgPSBxdWVyeS5zbGljZSgwLCBpKSwgY2FjaGVbc3VicXVlcnldKSB7XG4gICAgICAgICAgICBjYWNoZVtxdWVyeV0gPSBmaW5kKGNhY2hlW3N1YnF1ZXJ5XSwgcXVlcnksIG9wdGlvbnMpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGNhY2hlW3F1ZXJ5XSB8fCAoY2FjaGVbcXVlcnldID0gZmluZChkYXRhLCBxdWVyeSwgb3B0aW9ucykpLCBjYWNoZVtxdWVyeV07XG4gICAgfTtcbiAgfVxuKTtcbmZ1bmN0aW9uIGZpbmQoZGF0YSwgcXVlcnksIG9wdGlvbnMpIHtcbiAgcmV0dXJuICFpc09iamVjdChkYXRhKSAmJiAhQXJyYXkuaXNBcnJheShkYXRhKSA/IHt9IDogT2JqZWN0LmtleXMoZGF0YSkucmVkdWNlKGZ1bmN0aW9uKGFjYywga2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSBkYXRhW2tleV07XG4gICAgbGV0IG1hdGNoZXM7XG4gICAgcmV0dXJuIHZhbHVlID8gdHlwZW9mIHZhbHVlICE9IFwib2JqZWN0XCIgPyAoKGNvbnRhaW5zKHF1ZXJ5LCBrZXksIG9wdGlvbnMpIHx8IGNvbnRhaW5zKHF1ZXJ5LCB2YWx1ZSwgb3B0aW9ucykpICYmIChhY2Nba2V5XSA9IHZhbHVlKSwgYWNjKSA6IGNvbnRhaW5zKHF1ZXJ5LCBrZXksIG9wdGlvbnMpID8gKGFjY1trZXldID0gdmFsdWUsIGFjYykgOiAobWF0Y2hlcyA9IGZpbmQodmFsdWUsIHF1ZXJ5LCBvcHRpb25zKSwgaXNFbXB0eShtYXRjaGVzKSB8fCBPYmplY3QuYXNzaWduKGFjYywgcGFpcihrZXksIG1hdGNoZXMpKSwgYWNjKSA6IGFjYztcbiAgfSwge30pO1xufVxuZnVuY3Rpb24gY29udGFpbnMocXVlcnksIHZhbHVlLCBvcHRpb25zKSB7XG4gIGlmICghdmFsdWUpXG4gICAgcmV0dXJuICExO1xuICB2YXIgaGF5c3RhY2sgPSBTdHJpbmcodmFsdWUpLCBuZWVkbGUgPSBxdWVyeTtcbiAgcmV0dXJuIG9wdGlvbnM/Lmlnbm9yZUNhc2UgJiYgKGhheXN0YWNrID0gaGF5c3RhY2sudG9Mb3dlckNhc2UoKSwgbmVlZGxlID0gbmVlZGxlLnRvTG93ZXJDYXNlKCkpLCBoYXlzdGFjay5pbmRleE9mKG5lZWRsZSkgIT09IC0xO1xufVxuZnVuY3Rpb24gcGFpcihrZXksIHZhbHVlKSB7XG4gIHJldHVybiB7IFtrZXldOiB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICBsZXQgbGFzdERhdGEsIGxhc3RPcHRpb25zLCBsYXN0UmVzdWx0O1xuICByZXR1cm4gKGRhdGEsIG9wdGlvbnMpID0+ICgoIWxhc3RSZXN1bHQgfHwgZGF0YSAhPT0gbGFzdERhdGEgfHwgb3B0aW9ucyAhPT0gbGFzdE9wdGlvbnMpICYmIChsYXN0RGF0YSA9IGRhdGEsIGxhc3RPcHRpb25zID0gb3B0aW9ucywgbGFzdFJlc3VsdCA9IGZuKGRhdGEsIG9wdGlvbnMpKSwgbGFzdFJlc3VsdCk7XG59XG5jb25zdCBQQVRIX0RFTElNSVRFUiA9IFwiLlwiO1xuZnVuY3Rpb24gaW50ZWdlcihzdHIpIHtcbiAgcmV0dXJuIHBhcnNlSW50KHN0ciwgMTApO1xufVxuZnVuY3Rpb24gbGVucyhkYXRhLCBwYXRoKSB7XG4gIHZhciBwID0gcGF0aC5zcGxpdChQQVRIX0RFTElNSVRFUiksIHNlZ21lbnQgPSBwLnNoaWZ0KCk7XG4gIGlmICghc2VnbWVudClcbiAgICByZXR1cm4gZGF0YTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZGF0YVtpbnRlZ2VyKHNlZ21lbnQpXSlcbiAgICByZXR1cm4gbGVucyhkYXRhW2ludGVnZXIoc2VnbWVudCldLCBwLmpvaW4oUEFUSF9ERUxJTUlURVIpKTtcbiAgaWYgKGlzT2JqZWN0KGRhdGEpICYmIHNlZ21lbnQgaW4gZGF0YSlcbiAgICByZXR1cm4gbGVucyhkYXRhW3NlZ21lbnRdLCBwLmpvaW4oUEFUSF9ERUxJTUlURVIpKTtcbn1cbmNvbnN0IGRlZmF1bHRWYWxpZGF0ZVF1ZXJ5ID0gKHF1ZXJ5KSA9PiBxdWVyeS5sZW5ndGggPj0gMiwgZGVmYXVsdEZpbHRlck9wdGlvbnMgPSB7IGNhY2hlUmVzdWx0czogITAsIGlnbm9yZUNhc2U6ICExIH07XG5jbGFzcyBKc29uSW5zcGVjdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBkYXRhOiBudWxsLFxuICAgIHNlYXJjaDogU2VhcmNoQmFyLFxuICAgIHNlYXJjaE9wdGlvbnM6IHtcbiAgICAgIGRlYm91bmNlVGltZTogMFxuICAgIH0sXG4gICAgY2xhc3NOYW1lOiBcIlwiLFxuICAgIGlkOiBcImpzb24tXCIgKyBEYXRlLm5vdygpLFxuICAgIG9uQ2xpY2s6IG5vb3AsXG4gICAgZmlsdGVyT3B0aW9uczoge1xuICAgICAgY2FjaGVSZXN1bHRzOiAhMCxcbiAgICAgIGlnbm9yZUNhc2U6ICExXG4gICAgfSxcbiAgICB2YWxpZGF0ZVF1ZXJ5OiBmdW5jdGlvbihxdWVyeSkge1xuICAgICAgcmV0dXJuIHF1ZXJ5Lmxlbmd0aCA+PSAyO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRGVjaWRlIHdoZXRoZXIgdGhlIGxlYWYgbm9kZSBhdCBnaXZlbiBga2V5cGF0aGAgc2hvdWxkIGJlIGV4cGFuZGVkIGluaXRpYWxseS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBrZXlwYXRoIC0gUGF0aCB0byB0aGUgbm9kZVxuICAgICAqIEBwYXJhbSB2YWx1ZSAtIFZhbHVlIG9mIHRoZSBub2RlXG4gICAgICogQHJldHVybnMgVHJ1ZSBpZiBub2RlIHNob3VsZCBiZSBleHBhbmRlZCwgZmFsc2Ugb3RoZXJ3aXNlXG4gICAgICovXG4gICAgaXNFeHBhbmRlZDogZnVuY3Rpb24oa2V5cGF0aCwgdmFsdWUpIHtcbiAgICAgIHJldHVybiAhMTtcbiAgICB9LFxuICAgIHZlcmJvc2VTaG93T3JpZ2luYWw6ICExXG4gIH07XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpLCB0aGlzLnN0YXRlID0ge1xuICAgICAgcXVlcnk6IFwiXCIsXG4gICAgICBmaWx0ZXJlcjogZ2V0RmlsdGVyZXIocHJvcHMuZGF0YSwgcHJvcHMuZmlsdGVyT3B0aW9ucylcbiAgICB9O1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBkYXRhOiByYXdEYXRhLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgb25DbGljayxcbiAgICAgIGlkOiBpZDIsXG4gICAgICBpc0V4cGFuZGVkLFxuICAgICAgaW50ZXJhY3RpdmVMYWJlbCxcbiAgICAgIHZlcmJvc2VTaG93T3JpZ2luYWwsXG4gICAgICBmaWx0ZXJPcHRpb25zID0gZGVmYXVsdEZpbHRlck9wdGlvbnMsXG4gICAgICB2YWxpZGF0ZVF1ZXJ5ID0gZGVmYXVsdFZhbGlkYXRlUXVlcnlcbiAgICB9ID0gdGhpcy5wcm9wcywgaXNRdWVyeVZhbGlkID0gdGhpcy5zdGF0ZS5xdWVyeSAhPT0gXCJcIiAmJiB2YWxpZGF0ZVF1ZXJ5KHRoaXMuc3RhdGUucXVlcnkpLCBkYXRhID0gaXNRdWVyeVZhbGlkID8gdGhpcy5zdGF0ZS5maWx0ZXJlcih0aGlzLnN0YXRlLnF1ZXJ5KSA6IHJhd0RhdGEsIGlzTm90Rm91bmQgPSBpc1F1ZXJ5VmFsaWQgJiYgaXNFbXB0eShkYXRhKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeHMoXG4gICAgICBcImRpdlwiLFxuICAgICAge1xuICAgICAgICBcImRhdGEtdGVzdGlkXCI6IFwianNvbi1pbnNwZWN0b3JcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcImpzb24taW5zcGVjdG9yIFwiICsgY2xhc3NOYW1lLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHRoaXMucmVuZGVyVG9vbGJhcigpLFxuICAgICAgICAgIGlzTm90Rm91bmQgPyAvKiBAX19QVVJFX18gKi8ganN4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImpzb24taW5zcGVjdG9yX19ub3QtZm91bmRcIiwgY2hpbGRyZW46IFwiTm90aGluZyBmb3VuZFwiIH0pIDogLyogQF9fUFVSRV9fICovIGpzeChcbiAgICAgICAgICAgIExlYWYsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICAgIG9uQ2xpY2ssXG4gICAgICAgICAgICAgIGlkOiBpZDIsXG4gICAgICAgICAgICAgIGdldE9yaWdpbmFsOiB0aGlzLmdldE9yaWdpbmFsLFxuICAgICAgICAgICAgICBxdWVyeTogaXNRdWVyeVZhbGlkID8gbmV3IFJlZ0V4cChcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnF1ZXJ5LFxuICAgICAgICAgICAgICAgIGZpbHRlck9wdGlvbnMuaWdub3JlQ2FzZSA/IFwiaVwiIDogXCJcIlxuICAgICAgICAgICAgICApIDogbnVsbCxcbiAgICAgICAgICAgICAgbGFiZWw6IFwicm9vdFwiLFxuICAgICAgICAgICAgICByb290OiAhMCxcbiAgICAgICAgICAgICAgaXNFeHBhbmRlZCxcbiAgICAgICAgICAgICAgaW50ZXJhY3RpdmVMYWJlbCxcbiAgICAgICAgICAgICAgdmVyYm9zZVNob3dPcmlnaW5hbFxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcbiAgICAgICAgXVxuICAgICAgfVxuICAgICk7XG4gIH1cbiAgcmVuZGVyVG9vbGJhcigpIHtcbiAgICBjb25zdCBTZWFyY2ggPSB0aGlzLnByb3BzLnNlYXJjaDtcbiAgICByZXR1cm4gU2VhcmNoID8gLyogQF9fUFVSRV9fICovIGpzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJqc29uLWluc3BlY3Rvcl9fdG9vbGJhclwiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChcbiAgICAgIFNlYXJjaCxcbiAgICAgIHtcbiAgICAgICAgb25DaGFuZ2U6IGRlYm91bmNlKFxuICAgICAgICAgIHRoaXMuc2VhcmNoLFxuICAgICAgICAgIHRoaXMucHJvcHMuc2VhcmNoT3B0aW9ucz8uZGVib3VuY2VUaW1lXG4gICAgICAgICksXG4gICAgICAgIGRhdGE6IHRoaXMucHJvcHMuZGF0YSxcbiAgICAgICAgcXVlcnk6IHRoaXMuc3RhdGUucXVlcnlcbiAgICAgIH1cbiAgICApIH0pIDogbnVsbDtcbiAgfVxuICBzZWFyY2ggPSAocXVlcnkpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHsgcXVlcnkgfSk7XG4gIH07XG4gIHN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMobmV4dFByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICBjb25zdCBmaWx0ZXJlciA9IGdldEZpbHRlcmVyKG5leHRQcm9wcy5kYXRhLCBuZXh0UHJvcHMuZmlsdGVyT3B0aW9ucyk7XG4gICAgcmV0dXJuIGZpbHRlcmVyID09PSBwcmV2U3RhdGUuZmlsdGVyZXIgPyBudWxsIDogeyAuLi5wcmV2U3RhdGUsIGZpbHRlcmVyIH07XG4gIH1cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcywgcHJldlN0YXRlKSB7XG4gICAgcmV0dXJuIHByZXZTdGF0ZS5xdWVyeSAhPT0gdGhpcy5zdGF0ZS5xdWVyeSB8fCBuZXh0UHJvcHMuZGF0YSAhPT0gdGhpcy5wcm9wcy5kYXRhIHx8IG5leHRQcm9wcy5vbkNsaWNrICE9PSB0aGlzLnByb3BzLm9uQ2xpY2s7XG4gIH1cbiAgY3JlYXRlRmlsdGVyZXIgPSAoZGF0YSwgb3B0aW9ucykgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZmlsdGVyZXI6IGdldEZpbHRlcmVyKGRhdGEsIG9wdGlvbnMpXG4gICAgfSk7XG4gIH07XG4gIGdldE9yaWdpbmFsID0gKHBhdGgpID0+IGxlbnModGhpcy5wcm9wcy5kYXRhLCBwYXRoKTtcbn1cbmV4cG9ydCB7XG4gIEpzb25JbnNwZWN0b3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@rexxars/react-json-inspector/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@rexxars/react-split-pane/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@rexxars/react-split-pane/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pane: () => (/* binding */ Pane),\n/* harmony export */   SplitPane: () => (/* binding */ SplitPane)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nvar __defProp$1 = Object.defineProperty, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n};\nconst Pane = function(props) {\n  const { children, className, split, style: styleProps, size, eleRef } = props;\n  let style = {\n    flex: 1,\n    position: \"relative\",\n    outline: \"none\"\n  };\n  size !== void 0 && (split === \"vertical\" ? style.width = size : (style.height = size, style.display = \"flex\"), style.flex = \"none\"), style = __spreadValues$1(__spreadValues$1({}, style), styleProps);\n  const classes = [\"Pane\", split, className].filter(Boolean).join(\" \");\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { role: \"region\", ref: eleRef, className: classes, style, children });\n}, RESIZER_DEFAULT_CLASSNAME = \"Resizer\", Resizer = function(props) {\n  const {\n    className = RESIZER_DEFAULT_CLASSNAME,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onTouchEnd,\n    onTouchStart,\n    resizerClassName,\n    split,\n    style\n  } = props, classes = [resizerClassName, split, className].filter(Boolean).join(\" \");\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"span\",\n    {\n      role: \"separator\",\n      className: classes,\n      style,\n      onMouseDown: (event) => onMouseDown(event.nativeEvent),\n      onTouchStart: (event) => {\n        event.preventDefault(), onTouchStart(event.nativeEvent);\n      },\n      onTouchEnd: (event) => {\n        event.preventDefault(), onTouchEnd(event.nativeEvent);\n      },\n      onClick: (event) => {\n        onClick && (event.preventDefault(), onClick(event.nativeEvent));\n      },\n      onDoubleClick: (event) => {\n        onDoubleClick && (event.preventDefault(), onDoubleClick(event.nativeEvent));\n      }\n    }\n  );\n};\nvar __defProp = Object.defineProperty, __defProps = Object.defineProperties, __getOwnPropDescs = Object.getOwnPropertyDescriptors, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n}, __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b)), __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nconst BASE_STYLES = {\n  display: \"flex\",\n  flex: 1,\n  height: \"100%\",\n  position: \"absolute\",\n  outline: \"none\",\n  overflow: \"hidden\",\n  MozUserSelect: \"text\",\n  WebkitUserSelect: \"text\",\n  msUserSelect: \"text\",\n  userSelect: \"text\"\n}, VERTICAL_STYLES = __spreadProps(__spreadValues({}, BASE_STYLES), {\n  flexDirection: \"row\",\n  left: 0,\n  right: 0\n}), HORIZONTAL_STYLES = __spreadProps(__spreadValues({}, BASE_STYLES), {\n  bottom: 0,\n  flexDirection: \"column\",\n  minHeight: \"100%\",\n  top: 0,\n  width: \"100%\"\n}), EMPTY_STYLES = {}, _SplitPane = class _SplitPane2 extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  constructor(props) {\n    super(props), __publicField(this, \"pane1\", null), __publicField(this, \"pane2\", null), __publicField(this, \"splitPane\", null), this.onMouseDown = this.onMouseDown.bind(this), this.onTouchStart = this.onTouchStart.bind(this), this.onMouseMove = this.onMouseMove.bind(this), this.onTouchMove = this.onTouchMove.bind(this), this.onMouseUp = this.onMouseUp.bind(this);\n    const { size, defaultSize, minSize, maxSize, primary } = props, initialSize = size !== void 0 ? size : getDefaultSize(defaultSize, minSize, maxSize, void 0);\n    this.state = {\n      active: !1,\n      resized: !1,\n      pane1Size: primary === \"first\" ? initialSize : void 0,\n      pane2Size: primary === \"second\" ? initialSize : void 0,\n      // these are props that are needed in static functions. ie: gDSFP\n      instanceProps: {\n        size\n      }\n    };\n  }\n  componentDidMount() {\n    document.addEventListener(\"mouseup\", this.onMouseUp), document.addEventListener(\"mousemove\", this.onMouseMove), document.addEventListener(\"touchmove\", this.onTouchMove), this.setState(_SplitPane2.getSizeUpdate(this.props, this.state));\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return _SplitPane2.getSizeUpdate(nextProps, prevState);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.onMouseUp), document.removeEventListener(\"mousemove\", this.onMouseMove), document.removeEventListener(\"touchmove\", this.onTouchMove);\n  }\n  onMouseDown(event) {\n    this.onTouchStart(__spreadProps(__spreadValues({}, event), {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }]\n    }));\n  }\n  onTouchStart(event) {\n    const { allowResize, onDragStarted, split } = this.props;\n    if (allowResize) {\n      unFocus(document, window);\n      const position = split === \"vertical\" ? event.touches[0].clientX : event.touches[0].clientY;\n      typeof onDragStarted == \"function\" && onDragStarted(), this.setState({\n        active: !0,\n        position\n      });\n    }\n  }\n  onMouseMove(event) {\n    const eventWithTouches = Object.assign({}, event, {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }]\n    });\n    this.onTouchMove(eventWithTouches);\n  }\n  onTouchMove(event) {\n    if (!this.state.active || !this.props.allowResize)\n      return;\n    const { position = 0 } = this.state, {\n      maxSize,\n      minSize = _SplitPane2.defaultProps.minSize,\n      onChange,\n      split = _SplitPane2.defaultProps.split,\n      step\n    } = this.props;\n    unFocus(document, window);\n    const isPrimaryFirst = this.props.primary === \"first\", ref = isPrimaryFirst ? this.pane1 : this.pane2, ref2 = isPrimaryFirst ? this.pane2 : this.pane1;\n    if (!ref || !ref2 || !ref.getBoundingClientRect)\n      return;\n    const node = ref, node2 = ref2, width = node.getBoundingClientRect().width, height = node.getBoundingClientRect().height, current = split === \"vertical\" ? event.touches[0].clientX : event.touches[0].clientY, size = split === \"vertical\" ? width : height;\n    let positionDelta = position - current;\n    if (step) {\n      if (Math.abs(positionDelta) < step)\n        return;\n      positionDelta = ~~(positionDelta / step) * step;\n    }\n    let sizeDelta = isPrimaryFirst ? positionDelta : -positionDelta;\n    const pane1Order = parseInt(window.getComputedStyle(node).order), pane2Order = parseInt(window.getComputedStyle(node2).order);\n    pane1Order > pane2Order && (sizeDelta = -sizeDelta);\n    let newMaxSize = maxSize;\n    this.splitPane && maxSize !== void 0 && maxSize <= 0 && (split === \"vertical\" ? newMaxSize = this.splitPane.getBoundingClientRect().width + maxSize : newMaxSize = this.splitPane.getBoundingClientRect().height + maxSize);\n    let newSize = size - sizeDelta;\n    const newPosition = position - positionDelta;\n    minSize && newSize < minSize ? newSize = minSize : newMaxSize !== void 0 && newSize > newMaxSize ? newSize = newMaxSize : this.setState({\n      position: newPosition,\n      resized: !0\n    }), onChange && onChange(newSize);\n    const sizeState = isPrimaryFirst ? { pane1Size: newSize, pane2Size: void 0 } : { pane2Size: newSize, pane1Size: void 0 };\n    this.setState(__spreadValues({ draggedSize: newSize }, sizeState));\n  }\n  onMouseUp() {\n    if (!this.state.active || !this.props.allowResize)\n      return;\n    const { onDragFinished } = this.props, { draggedSize } = this.state;\n    typeof draggedSize < \"u\" && typeof onDragFinished == \"function\" && onDragFinished(draggedSize), this.setState({ active: !1 });\n  }\n  // we have to check values since gDSFP is called on every render and more in StrictMode\n  static getSizeUpdate(props, state) {\n    const { instanceProps } = state;\n    if (instanceProps.size === props.size && props.size !== void 0)\n      return {};\n    const newSize = props.size !== void 0 ? props.size : getDefaultSize(\n      props.defaultSize,\n      props.minSize,\n      props.maxSize,\n      state.draggedSize\n    ), sizeState = props.primary === \"first\" ? { pane1Size: newSize, pane2Size: void 0 } : { pane2Size: newSize, pane1Size: void 0 };\n    return __spreadProps(__spreadValues(__spreadValues({}, sizeState), typeof props.size > \"u\" ? {} : { draggedSize: newSize }), {\n      instanceProps: { size: props.size }\n    });\n  }\n  render() {\n    const {\n      allowResize,\n      children,\n      className,\n      onResizerClick,\n      onResizerDoubleClick,\n      paneClassName,\n      pane1ClassName,\n      pane2ClassName,\n      paneStyle,\n      pane1Style: pane1StyleProps,\n      pane2Style: pane2StyleProps,\n      resizerClassName = RESIZER_DEFAULT_CLASSNAME,\n      resizerStyle,\n      split,\n      style: styleProps\n    } = this.props, { pane1Size, pane2Size } = this.state, disabledClass = allowResize ? \"\" : \"disabled\", resizerClassNamesIncludingDefault = resizerClassName && `${resizerClassName} ${RESIZER_DEFAULT_CLASSNAME}`, notNullChildren = removeNullChildren(children), baseStyles = split === \"vertical\" ? VERTICAL_STYLES : HORIZONTAL_STYLES, style = styleProps ? __spreadValues(__spreadValues({}, baseStyles), styleProps) : baseStyles, classes = [\"SplitPane\", className, split, disabledClass].filter(Boolean).join(\" \"), pane1Style = coalesceOnEmpty(\n      __spreadValues(__spreadValues({}, paneStyle), pane1StyleProps),\n      EMPTY_STYLES\n    ), pane2Style = coalesceOnEmpty(\n      __spreadValues(__spreadValues({}, paneStyle), pane2StyleProps),\n      EMPTY_STYLES\n    ), pane1Classes = [\"Pane1\", paneClassName, pane1ClassName].join(\" \"), pane2Classes = [\"Pane2\", paneClassName, pane2ClassName].join(\" \");\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"div\",\n      {\n        \"data-testid\": \"split-pane\",\n        className: classes,\n        style,\n        ref: (node) => {\n          this.splitPane = node;\n        },\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Pane,\n            {\n              className: pane1Classes,\n              eleRef: (node) => {\n                this.pane1 = node;\n              },\n              size: pane1Size,\n              split,\n              style: pane1Style,\n              children: notNullChildren[0]\n            },\n            \"pane1\"\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Resizer,\n            {\n              className: disabledClass,\n              onClick: onResizerClick,\n              onDoubleClick: onResizerDoubleClick,\n              onMouseDown: this.onMouseDown,\n              onTouchStart: this.onTouchStart,\n              onTouchEnd: this.onMouseUp,\n              resizerClassName: resizerClassNamesIncludingDefault,\n              split: split || \"vertical\",\n              style: resizerStyle || EMPTY_STYLES\n            },\n            \"resizer\"\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Pane,\n            {\n              className: pane2Classes,\n              eleRef: (node) => {\n                this.pane2 = node;\n              },\n              size: pane2Size,\n              split,\n              style: pane2Style,\n              children: notNullChildren[1]\n            },\n            \"pane2\"\n          )\n        ]\n      }\n    );\n  }\n};\n__publicField(_SplitPane, \"defaultProps\", {\n  allowResize: !0,\n  minSize: 50,\n  primary: \"first\",\n  split: \"vertical\",\n  paneClassName: \"\",\n  pane1ClassName: \"\",\n  pane2ClassName: \"\"\n});\nlet SplitPane = _SplitPane;\nfunction unFocus(document2, window2) {\n  var _a;\n  if (\"selection\" in document2 && typeof document2.selection == \"object\" && document2.selection && \"empty\" in document2.selection && typeof document2.selection.empty == \"function\")\n    try {\n      document2.selection.empty();\n    } catch (e) {\n    }\n  else if (typeof window2 < \"u\" && typeof window2.getSelection == \"function\")\n    try {\n      (_a = window2.getSelection()) == null || _a.removeAllRanges();\n    } catch (e) {\n    }\n}\nfunction getDefaultSize(defaultSize, minSize, maxSize, draggedSize) {\n  if (typeof draggedSize == \"number\") {\n    const min = typeof minSize == \"number\" ? minSize : 0, max = typeof maxSize == \"number\" && maxSize >= 0 ? maxSize : 1 / 0;\n    return Math.max(min, Math.min(max, draggedSize));\n  }\n  return defaultSize !== void 0 ? defaultSize : minSize;\n}\nfunction removeNullChildren(children) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(children).filter((c) => c);\n}\nfunction isEmptyish(obj) {\n  return obj === null || typeof obj > \"u\" || Object.keys(obj).length === 0;\n}\nfunction coalesceOnEmpty(obj, useOnEmpty) {\n  return isEmptyish(obj) ? useOnEmpty : obj;\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@rexxars/react-split-pane/dist/index.js\n");

/***/ })

};
;